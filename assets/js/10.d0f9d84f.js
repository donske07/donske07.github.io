(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{677:function(e,t,s){"use strict";s.r(t);var a=s(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"clean-codebase-is-like-a-clean-house-scratch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clean-codebase-is-like-a-clean-house-scratch"}},[e._v("#")]),e._v(" Clean Codebase Is Like A Clean House - Scratch")]),e._v(" "),s("p",[e._v("Below are a few things I will touch base on in my next blog post.")]),e._v(" "),s("p",[e._v("Use function type hinting")]),e._v(" "),s("p",[e._v("Readability. Doc blocks return types. Adhere to PSR.")]),e._v(" "),s("p",[e._v("Having suite of test helps refactoring. Eg renaming methods and classes.")]),e._v(" "),s("p",[e._v("Directory structure")]),e._v(" "),s("p",[e._v("Single responsibility principle - small classes. Tell your self what is this class doing.")]),e._v(" "),s("p",[e._v("Delete methods and properties that are not being used.\nIt adds no value and confuses a system's design because the interface effectively lies about its own functionality")]),e._v(" "),s("p",[e._v("DRY eliminate code duplication through inheritance or traits. Moving conditionals to manager classes.")]),e._v(" "),s("p",[e._v("Helps IDE functionality.")]),e._v(" "),s("p",[e._v("Confusing nested Ifs.")]),e._v(" "),s("p",[e._v("Public protected private visibility. clear interface. Gateway between the system and the rest of the code.")]),e._v(" "),s("p",[e._v("Abstract the abstraction trap")]),e._v(" "),s("p",[e._v("Use enums")])])}),[],!1,null,null,null);t.default=n.exports}}]);